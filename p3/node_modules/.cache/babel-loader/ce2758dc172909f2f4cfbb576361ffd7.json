{"remainingRequest":"/opt/lampp/htdocs/e28/p3/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/lampp/htdocs/e28/p3/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue?vue&type=script&lang=js","dependencies":[{"path":"/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue","mtime":1620779877670},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBtaW5lclNlbGVjdGVkOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGVyYWhhc2hSYXRlOiAxMDAsCiAgICAgIHBvd2VyVXNlOiAzMjAwLAogICAgICBlbGVjdHJpY2l0eUNvc3RzOiAwLjA3LAogICAgICBwcmljZTogNjAwMDAsCiAgICAgIGRpZmZpY3VsdHk6IDIzNTgxOTgxNDQzNjYzLAogICAgICBuZXR3b3JrSGFzaHJhdGU6IDEuODI4MjFlKzIwLAogICAgICBzdXBwbHlFbWlzc2lvblBlckJsb2NrOiA2LjI1LAogICAgICBwZXJpb2Q6IDMwLAogICAgICBmb3JlY2FzdHM6IFtdCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIG1pbmVyU2VsZWN0ZWQ6IGZ1bmN0aW9uIG1pbmVyU2VsZWN0ZWQoKSB7CiAgICAgIHRoaXMudGVyYWhhc2hSYXRlID0gdGhpcy5taW5lclNlbGVjdGVkWzBdOwogICAgICB0aGlzLnBvd2VyVXNlID0gdGhpcy5taW5lclNlbGVjdGVkWzFdOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVzZXRGb3JlY2FzdHM6IGZ1bmN0aW9uIHJlc2V0Rm9yZWNhc3RzKCkgewogICAgICB0aGlzLmZvcmVjYXN0cyA9IFtdOwogICAgfSwKICAgIGNyZWF0ZVZhcmlhYmxlczogZnVuY3Rpb24gY3JlYXRlVmFyaWFibGVzKCkgewogICAgICB2YXIgaGFzaHJhdGUgPSB0aGlzLnRlcmFoYXNoUmF0ZSAqIDEwMDAwMDAwMDAwMDA7CiAgICAgIHZhciBzaGFyZXJhdGUgPSBoYXNocmF0ZSAvIE1hdGgucG93KDIsIDMyKTsKICAgICAgdmFyIGNvc3QgPSB0aGlzLnBvd2VyVXNlICogMjQgLyAxMDAwICogdGhpcy5lbGVjdHJpY2l0eUNvc3RzOwogICAgICB2YXIgZGlmZmljdWx0eSA9IHRoaXMuZGlmZmljdWx0eTsKICAgICAgdmFyIG5ldHdvcmtIYXNocmF0ZSA9IHRoaXMubmV0d29ya0hhc2hyYXRlOwogICAgICB2YXIgYmxvY2tzcGVyZGF5ID0gc2hhcmVyYXRlIC8gdGhpcy5kaWZmaWN1bHR5ICogODY0MDA7CiAgICAgIHZhciBjb2luc3BlcmRheSA9IGJsb2Nrc3BlcmRheSAqIHRoaXMuc3VwcGx5RW1pc3Npb25QZXJCbG9jazsKICAgICAgdmFyIHJldmVudWVwZXJkYXkgPSBjb2luc3BlcmRheSAqIHRoaXMucHJpY2U7CiAgICAgIHZhciBwcm9maXQgPSByZXZlbnVlcGVyZGF5IC0gY29zdDsKICAgICAgdmFyIHZhcmlhYmxlcyA9IFtoYXNocmF0ZSwgbmV0d29ya0hhc2hyYXRlLCBzaGFyZXJhdGUsIGRpZmZpY3VsdHksIGJsb2Nrc3BlcmRheSwgY29pbnNwZXJkYXksIHJldmVudWVwZXJkYXksIGNvc3QsIHByb2ZpdF07CiAgICAgIHJldHVybiB2YXJpYWJsZXM7CiAgICB9LAogICAgY3JlYXRlRm9yZWNhc3Q6IGZ1bmN0aW9uIGNyZWF0ZUZvcmVjYXN0KGhhc2hyYXRlLCBuZXR3b3JrSGFzaHJhdGUsIHNoYXJlcmF0ZSwgZGlmZmljdWx0eSwgYmxvY2tzcGVyZGF5LCBjb2luc3BlcmRheSwgcmV2ZW51ZXBlcmRheSwgY29zdCwgcHJvZml0KSB7CiAgICAgIHZhciB0b3RhbFByb2ZpdCA9IDA7CgogICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSB0aGlzLnBlcmlvZDsgaSsrKSB7CiAgICAgICAgdG90YWxQcm9maXQgKz0gcHJvZml0OwogICAgICAgIHZhciBmb3JlY2FzdCA9IHsKICAgICAgICAgICJkYXkiOiBpLAogICAgICAgICAgImhhc2hyYXRlIjogaGFzaHJhdGUsCiAgICAgICAgICAibmV0d29ya0hhc2hyYXRlIjogbmV0d29ya0hhc2hyYXRlLAogICAgICAgICAgInNoYXJlcmF0ZSI6IE51bWJlcihNYXRoLnJvdW5kKHNoYXJlcmF0ZSArICJlMiIpICsgImUtMiIpLnRvRml4ZWQoMiksCiAgICAgICAgICAiZGlmZmljdWx0eSI6IE51bWJlcihNYXRoLnJvdW5kKGRpZmZpY3VsdHkgKyAiZTAiKSArICJlLTAiKS50b0ZpeGVkKDApLAogICAgICAgICAgImJsb2Nrc3BlcmRheSI6IE51bWJlcihNYXRoLnJvdW5kKGJsb2Nrc3BlcmRheSArICJlOCIpICsgImUtOCIpLnRvRml4ZWQoOCksCiAgICAgICAgICAiY29pbnNwZXJkYXkiOiBOdW1iZXIoTWF0aC5yb3VuZChjb2luc3BlcmRheSArICJlOCIpICsgImUtOCIpLnRvRml4ZWQoOCksCiAgICAgICAgICAicmV2ZW51ZXBlcmRheSI6IE51bWJlcihNYXRoLnJvdW5kKHJldmVudWVwZXJkYXkgKyAiZTIiKSArICJlLTIiKS50b0ZpeGVkKDIpLAogICAgICAgICAgImVsZWN0cmljaXR5Q29zdHMiOiBOdW1iZXIoTWF0aC5yb3VuZChjb3N0ICsgImUyIikgKyAiZS0yIikudG9GaXhlZCgyKSwKICAgICAgICAgICJwcm9maXQiOiBOdW1iZXIoTWF0aC5yb3VuZChwcm9maXQgKyAiZTIiKSArICJlLTIiKS50b0ZpeGVkKDIpLAogICAgICAgICAgInRvdGFsUHJvZml0IjogTnVtYmVyKE1hdGgucm91bmQodG90YWxQcm9maXQgKyAiZTIiKSArICJlLTIiKS50b0ZpeGVkKDIpCiAgICAgICAgfTsKICAgICAgICB0aGlzLmFkZEZvcmVjYXN0KGZvcmVjYXN0KTsKICAgICAgICBuZXR3b3JrSGFzaHJhdGUgPSB0aGlzLm5ldHdvcmtIYXNocmF0ZSAqIDIgLyA3MzAgKyBuZXR3b3JrSGFzaHJhdGU7CiAgICAgICAgZGlmZmljdWx0eSA9IHRoaXMuZGlmZmljdWx0eSAqIDIuNzUgLyA3MzAgKyBkaWZmaWN1bHR5OwogICAgICAgIGJsb2Nrc3BlcmRheSA9IHNoYXJlcmF0ZSAvIGRpZmZpY3VsdHkgKiA4NjQwMDsKICAgICAgICBjb2luc3BlcmRheSA9IGJsb2Nrc3BlcmRheSAqIHRoaXMuc3VwcGx5RW1pc3Npb25QZXJCbG9jazsKICAgICAgICByZXZlbnVlcGVyZGF5ID0gY29pbnNwZXJkYXkgKiB0aGlzLnByaWNlOwogICAgICAgIHByb2ZpdCA9IHJldmVudWVwZXJkYXkgLSBjb3N0OwogICAgICB9CiAgICB9LAogICAgYWRkRm9yZWNhc3Q6IGZ1bmN0aW9uIGFkZEZvcmVjYXN0KGZvcmVjYXN0KSB7CiAgICAgIHRoaXMuZm9yZWNhc3RzLnB1c2goZm9yZWNhc3QpOwogICAgfSwKICAgIG1pbmluZ0NhbGN1bGF0b3I6IGZ1bmN0aW9uIG1pbmluZ0NhbGN1bGF0b3IoKSB7CiAgICAgIHRoaXMucmVzZXRGb3JlY2FzdHMoKTsKICAgICAgdmFyIEsgPSB0aGlzLmNyZWF0ZVZhcmlhYmxlcygpOwogICAgICB0aGlzLmNyZWF0ZUZvcmVjYXN0KEtbMF0sIEtbMV0sIEtbMl0sIEtbM10sIEtbNF0sIEtbNV0sIEtbNl0sIEtbN10sIEtbOF0sIEtbOV0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      {{ miningCalculator() }} \n\n      <div class=\"row\">\n        \n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Hashrate (TH/s)</h4> \n            <input data-test=\"hashrate\" type=\"number\" v-model.number=\"terahashRate\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Power Use</h4> \n            <input data-test=\"power\" type=\"number\" v-model.number=\"powerUse\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Electricity Costs (kWh)</h4> \n            <input type=\"number\" v-model.number=\"electricityCosts\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Bitcoin Price</h4>\n            <input type=\"number\" v-model.number=\"price\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Difficulty</h4> \n            <input type=\"number\" v-model.number=\"difficulty\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Network Hashrate</h4> \n            <input type=\"number\" v-model.number=\"networkHashrate\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Emission Per Block</h4> \n            <input type=\"number\" v-model.number=\"supplyEmissionPerBlock\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Periods</h4> \n            <input data-test=\"periods\" type=\"number\" v-model.number=\"period\">\n          </label>\n        </div>\n\n      </div>\n    </div>\n\n    <div id=\"forecasts\">\n      <table class=\"table\">\n\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Hashrate</th>\n            <th scope=\"col\">Network Hashrate</th>\n            <th scope=\"col\">Share Rate</th>\n            <th scope=\"col\">Difficulty</th>\n            <th scope=\"col\">Blocks per Day</th>\n            <th scope=\"col\">BTC per Day</th>\n            <th scope=\"col\">Revenue per Day</th>\n            <th scope=\"col\">Electricity Costs</th>\n            <th scope=\"col\">Profit</th>\n            <th scope=\"col\">Total Profit</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr v-bind:key=\"item\" v-for=\"item in forecasts\">\n            <th scope=\"row\">{{ item.day }}</th>\n            <td data-test=\"forecast-hashrate\">{{ item.hashrate }}</td>\n            <td>{{ item.networkHashrate }}</td>\n            <td>{{ item.sharerate }}</td>\n            <td>{{ item.difficulty }}</td>\n            <td>{{ item.blocksperday }}</td>\n            <td>{{ item.coinsperday }}</td>\n            <td>{{ item.revenueperday }}</td>\n            <td data-test=\"forecast-electricity\">{{ item.electricityCosts }}</td>\n            <td>{{ item.profit }}</td>\n            <td>{{ item.totalProfit }}</td>\n          </tr>\n\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n\n  props: {\n    minerSelected: {\n      type: Array,\n      default: null,\n    }\n  },\n\n  data() {\n    return {\n      terahashRate: 100,\n      powerUse: 3200,\n      electricityCosts: 0.07,\n      price: 60000,\n      difficulty: 23581981443663,\n      networkHashrate: 1.82821e+20,\n      supplyEmissionPerBlock: 6.25,\n      period: 30,\n      forecasts: [],\n    }\n  },\n\n  watch: {\n    minerSelected: function() {\n      this.terahashRate = this.minerSelected[0];\n      this.powerUse = this.minerSelected[1];\n    }\n  },\n\n  methods: {\n    resetForecasts: function() {\n      this.forecasts = [];\n    },\n\n    createVariables: function() {\n      const hashrate = this.terahashRate * 1000000000000;\n      const sharerate = hashrate / Math.pow(2, 32)\n      const cost = ((this.powerUse * 24) / 1000) * this.electricityCosts;\n\n      let difficulty = this.difficulty;\n      let networkHashrate = this.networkHashrate;\n      let blocksperday = (sharerate / this.difficulty) * 86400;\n      let coinsperday = blocksperday * this.supplyEmissionPerBlock;\n      let revenueperday = coinsperday * this.price;\n      let profit = revenueperday - cost;\n\n      const variables = [hashrate, networkHashrate, sharerate, difficulty,\n                  blocksperday, coinsperday, revenueperday, cost, profit];\n\n      return variables;\n    },\n\n    createForecast: function(hashrate, networkHashrate, sharerate, \n                             difficulty, blocksperday, coinsperday, \n                             revenueperday, cost, profit) {\n\n      let totalProfit = 0;\n\n      for (let i = 1; i <= this.period; i++) {\n        totalProfit += profit;\n\n        let forecast = {\n          \"day\": i,\n          \"hashrate\": hashrate,\n          \"networkHashrate\": networkHashrate,\n          \"sharerate\": Number(Math.round(sharerate + \"e2\") + \"e-2\").toFixed(2),\n          \"difficulty\": Number(Math.round(difficulty + \"e0\") + \"e-0\").toFixed(0),\n          \"blocksperday\": Number(Math.round(blocksperday + \"e8\") + \"e-8\").toFixed(8),\n          \"coinsperday\": Number(Math.round(coinsperday + \"e8\") + \"e-8\").toFixed(8),\n          \"revenueperday\": Number(Math.round(revenueperday + \"e2\") + \"e-2\").toFixed(2),\n          \"electricityCosts\": Number(Math.round(cost + \"e2\") + \"e-2\").toFixed(2),\n          \"profit\": Number(Math.round(profit + \"e2\") + \"e-2\").toFixed(2),\n          \"totalProfit\": Number(Math.round(totalProfit + \"e2\") + \"e-2\").toFixed(2),\n        };\n\n        this.addForecast(forecast);\n\n        networkHashrate = ((this.networkHashrate * 2) / 730) + networkHashrate;\n        difficulty = ((this.difficulty * 2.75) / 730) + difficulty;\n        blocksperday = (sharerate / difficulty) * 86400;\n        coinsperday = blocksperday * this.supplyEmissionPerBlock;\n        revenueperday = coinsperday * this.price;\n        profit = revenueperday - cost;\n      }\n    },\n\n    addForecast: function(forecast) {\n      this.forecasts.push(forecast);\n    },\n\n    miningCalculator: function() {\n      this.resetForecasts();\n      const K = this.createVariables();\n      this.createForecast(K[0], K[1], K[2], K[3], K[4], K[5], K[6], K[7], K[8], K[9]);\n    },\n  },\n}\n</script>\n\n<style scoped>\n.block {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: center;\n  margin: 5px;\n  margin-top: 30px;\n  padding: 15px;\n  padding-bottom: 30px;\n  background-color: gainsboro;\n}\n\n.block-title {\n  margin: 10px;\n}\n\n#forecasts {\n  margin-top: 80px;\n}\n</style>"],"sourceRoot":""}]}