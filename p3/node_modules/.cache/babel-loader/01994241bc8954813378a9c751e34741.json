{"remainingRequest":"/opt/lampp/htdocs/e28/p3/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/e28/p3/node_modules/eslint-loader/index.js??ref--13-0!/opt/lampp/htdocs/e28/p3/src/common/store.js","dependencies":[{"path":"/opt/lampp/htdocs/e28/p3/src/common/store.js","mtime":1620717656119},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlLCBjcmVhdGVMb2dnZXIgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgYXhpb3MgfSBmcm9tICJAL2NvbW1vbi9hcHAuanMiOyAvLyBPbmx5IGxvYWQgdGhlIGNyZWF0ZUxvZ2dlciBwbHVnaW4gd2hlbiBpbiBkZXZlbG9wbWVudCBtb2RlCgp2YXIgZGVidWcgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nOwp2YXIgcGx1Z2lucyA9IGRlYnVnID8gW2NyZWF0ZUxvZ2dlcih7fSldIDogW107CmV4cG9ydCB2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZSh7CiAgcGx1Z2luczogcGx1Z2lucywKICBzdGF0ZTogewogICAgbWluZXJzQ291bnQ6IDAsCiAgICB1c2VyOiBudWxsCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldE1pbmVyc0NvdW50OiBmdW5jdGlvbiBzZXRNaW5lcnNDb3VudChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5taW5lcnNDb3VudCA9IHBheWxvYWQ7CiAgICB9LAogICAgc2V0VXNlcjogZnVuY3Rpb24gc2V0VXNlcihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS51c2VyID0gcGF5bG9hZDsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGF1dGhVc2VyOiBmdW5jdGlvbiBhdXRoVXNlcihjb250ZXh0KSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIGF4aW9zLnBvc3QoJ2F1dGgnKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuYXV0aGVudGljYXRlZCkgewogICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnc2V0VXNlcicsIHJlc3BvbnNlLmRhdGEudXNlcik7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnc2V0VXNlcicsIGZhbHNlKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["/opt/lampp/htdocs/e28/p3/src/common/store.js"],"names":["createStore","createLogger","axios","debug","process","env","NODE_ENV","plugins","store","state","minersCount","user","mutations","setMinersCount","payload","setUser","actions","authUser","context","Promise","resolve","post","then","response","data","authenticated","commit"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,MAA1C;AACA,SAASC,KAAT,QAAsB,iBAAtB,C,CAEA;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAvC;AACA,IAAMC,OAAO,GAAGJ,KAAK,GAAG,CAACF,YAAY,CAAC,EAAD,CAAb,CAAH,GAAwB,EAA7C;AAEA,OAAO,IAAMO,KAAK,GAAGR,WAAW,CAAC;AAC7BO,EAAAA,OAAO,EAAPA,OAD6B;AAG7BE,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE,CADV;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAHsB;AAQ7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,cADO,0BACQJ,KADR,EACeK,OADf,EACwB;AAC3BL,MAAAA,KAAK,CAACC,WAAN,GAAoBI,OAApB;AACH,KAHM;AAKPC,IAAAA,OALO,mBAKCN,KALD,EAKQK,OALR,EAKiB;AACpBL,MAAAA,KAAK,CAACE,IAAN,GAAaG,OAAb;AACH;AAPM,GARkB;AAmB7BE,EAAAA,OAAO,EAAE;AACLC,IAAAA,QADK,oBACIC,OADJ,EACa;AACd,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5BlB,QAAAA,KAAK,CAACmB,IAAN,CAAW,MAAX,EAAmBC,IAAnB,CAAwB,UAACC,QAAD,EAAc;AAElC,cAAIA,QAAQ,CAACC,IAAT,CAAcC,aAAlB,EAAiC;AAC7BP,YAAAA,OAAO,CAACQ,MAAR,CAAe,SAAf,EAA0BH,QAAQ,CAACC,IAAT,CAAcb,IAAxC;AACH,WAFD,MAGK;AACDO,YAAAA,OAAO,CAACQ,MAAR,CAAe,SAAf,EAA0B,KAA1B;AACH;;AAEDN,UAAAA,OAAO;AAEV,SAXD;AAYH,OAbM,CAAP;AAcH;AAhBI;AAnBoB,CAAD,CAAzB","sourcesContent":["import { createStore, createLogger } from 'vuex'\nimport { axios } from \"@/common/app.js\";\n\n// Only load the createLogger plugin when in development mode\nconst debug = process.env.NODE_ENV !== 'production';\nconst plugins = debug ? [createLogger({})] : [];\n\nexport const store = createStore({\n    plugins,\n\n    state: {\n        minersCount: 0,\n        user: null\n    },\n\n    mutations: {\n        setMinersCount(state, payload) {\n            state.minersCount = payload;\n        },\n\n        setUser(state, payload) {\n            state.user = payload;\n        },\n    \n    },\n\n    actions: {\n        authUser(context) {\n            return new Promise((resolve) => {\n                axios.post('auth').then((response) => {\n\n                    if (response.data.authenticated) {\n                        context.commit('setUser', response.data.user);\n                    } \n                    else {\n                        context.commit('setUser', false);\n                    }\n        \n                    resolve();\n\n                });\n            });\n        },\n    }\n})\n"]}]}