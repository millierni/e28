{"remainingRequest":"/opt/lampp/htdocs/e28/p3/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue?vue&type=script&lang=js","dependencies":[{"path":"/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue","mtime":1620779877670},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKCiAgcHJvcHM6IHsKICAgIG1pbmVyU2VsZWN0ZWQ6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRlcmFoYXNoUmF0ZTogMTAwLAogICAgICBwb3dlclVzZTogMzIwMCwKICAgICAgZWxlY3RyaWNpdHlDb3N0czogMC4wNywKICAgICAgcHJpY2U6IDYwMDAwLAogICAgICBkaWZmaWN1bHR5OiAyMzU4MTk4MTQ0MzY2MywKICAgICAgbmV0d29ya0hhc2hyYXRlOiAxLjgyODIxZSsyMCwKICAgICAgc3VwcGx5RW1pc3Npb25QZXJCbG9jazogNi4yNSwKICAgICAgcGVyaW9kOiAzMCwKICAgICAgZm9yZWNhc3RzOiBbXSwKICAgIH0KICB9LAoKICB3YXRjaDogewogICAgbWluZXJTZWxlY3RlZDogZnVuY3Rpb24oKSB7CiAgICAgIHRoaXMudGVyYWhhc2hSYXRlID0gdGhpcy5taW5lclNlbGVjdGVkWzBdOwogICAgICB0aGlzLnBvd2VyVXNlID0gdGhpcy5taW5lclNlbGVjdGVkWzFdOwogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIHJlc2V0Rm9yZWNhc3RzOiBmdW5jdGlvbigpIHsKICAgICAgdGhpcy5mb3JlY2FzdHMgPSBbXTsKICAgIH0sCgogICAgY3JlYXRlVmFyaWFibGVzOiBmdW5jdGlvbigpIHsKICAgICAgY29uc3QgaGFzaHJhdGUgPSB0aGlzLnRlcmFoYXNoUmF0ZSAqIDEwMDAwMDAwMDAwMDA7CiAgICAgIGNvbnN0IHNoYXJlcmF0ZSA9IGhhc2hyYXRlIC8gTWF0aC5wb3coMiwgMzIpCiAgICAgIGNvbnN0IGNvc3QgPSAoKHRoaXMucG93ZXJVc2UgKiAyNCkgLyAxMDAwKSAqIHRoaXMuZWxlY3RyaWNpdHlDb3N0czsKCiAgICAgIGxldCBkaWZmaWN1bHR5ID0gdGhpcy5kaWZmaWN1bHR5OwogICAgICBsZXQgbmV0d29ya0hhc2hyYXRlID0gdGhpcy5uZXR3b3JrSGFzaHJhdGU7CiAgICAgIGxldCBibG9ja3NwZXJkYXkgPSAoc2hhcmVyYXRlIC8gdGhpcy5kaWZmaWN1bHR5KSAqIDg2NDAwOwogICAgICBsZXQgY29pbnNwZXJkYXkgPSBibG9ja3NwZXJkYXkgKiB0aGlzLnN1cHBseUVtaXNzaW9uUGVyQmxvY2s7CiAgICAgIGxldCByZXZlbnVlcGVyZGF5ID0gY29pbnNwZXJkYXkgKiB0aGlzLnByaWNlOwogICAgICBsZXQgcHJvZml0ID0gcmV2ZW51ZXBlcmRheSAtIGNvc3Q7CgogICAgICBjb25zdCB2YXJpYWJsZXMgPSBbaGFzaHJhdGUsIG5ldHdvcmtIYXNocmF0ZSwgc2hhcmVyYXRlLCBkaWZmaWN1bHR5LAogICAgICAgICAgICAgICAgICBibG9ja3NwZXJkYXksIGNvaW5zcGVyZGF5LCByZXZlbnVlcGVyZGF5LCBjb3N0LCBwcm9maXRdOwoKICAgICAgcmV0dXJuIHZhcmlhYmxlczsKICAgIH0sCgogICAgY3JlYXRlRm9yZWNhc3Q6IGZ1bmN0aW9uKGhhc2hyYXRlLCBuZXR3b3JrSGFzaHJhdGUsIHNoYXJlcmF0ZSwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlmZmljdWx0eSwgYmxvY2tzcGVyZGF5LCBjb2luc3BlcmRheSwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV2ZW51ZXBlcmRheSwgY29zdCwgcHJvZml0KSB7CgogICAgICBsZXQgdG90YWxQcm9maXQgPSAwOwoKICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gdGhpcy5wZXJpb2Q7IGkrKykgewogICAgICAgIHRvdGFsUHJvZml0ICs9IHByb2ZpdDsKCiAgICAgICAgbGV0IGZvcmVjYXN0ID0gewogICAgICAgICAgImRheSI6IGksCiAgICAgICAgICAiaGFzaHJhdGUiOiBoYXNocmF0ZSwKICAgICAgICAgICJuZXR3b3JrSGFzaHJhdGUiOiBuZXR3b3JrSGFzaHJhdGUsCiAgICAgICAgICAic2hhcmVyYXRlIjogTnVtYmVyKE1hdGgucm91bmQoc2hhcmVyYXRlICsgImUyIikgKyAiZS0yIikudG9GaXhlZCgyKSwKICAgICAgICAgICJkaWZmaWN1bHR5IjogTnVtYmVyKE1hdGgucm91bmQoZGlmZmljdWx0eSArICJlMCIpICsgImUtMCIpLnRvRml4ZWQoMCksCiAgICAgICAgICAiYmxvY2tzcGVyZGF5IjogTnVtYmVyKE1hdGgucm91bmQoYmxvY2tzcGVyZGF5ICsgImU4IikgKyAiZS04IikudG9GaXhlZCg4KSwKICAgICAgICAgICJjb2luc3BlcmRheSI6IE51bWJlcihNYXRoLnJvdW5kKGNvaW5zcGVyZGF5ICsgImU4IikgKyAiZS04IikudG9GaXhlZCg4KSwKICAgICAgICAgICJyZXZlbnVlcGVyZGF5IjogTnVtYmVyKE1hdGgucm91bmQocmV2ZW51ZXBlcmRheSArICJlMiIpICsgImUtMiIpLnRvRml4ZWQoMiksCiAgICAgICAgICAiZWxlY3RyaWNpdHlDb3N0cyI6IE51bWJlcihNYXRoLnJvdW5kKGNvc3QgKyAiZTIiKSArICJlLTIiKS50b0ZpeGVkKDIpLAogICAgICAgICAgInByb2ZpdCI6IE51bWJlcihNYXRoLnJvdW5kKHByb2ZpdCArICJlMiIpICsgImUtMiIpLnRvRml4ZWQoMiksCiAgICAgICAgICAidG90YWxQcm9maXQiOiBOdW1iZXIoTWF0aC5yb3VuZCh0b3RhbFByb2ZpdCArICJlMiIpICsgImUtMiIpLnRvRml4ZWQoMiksCiAgICAgICAgfTsKCiAgICAgICAgdGhpcy5hZGRGb3JlY2FzdChmb3JlY2FzdCk7CgogICAgICAgIG5ldHdvcmtIYXNocmF0ZSA9ICgodGhpcy5uZXR3b3JrSGFzaHJhdGUgKiAyKSAvIDczMCkgKyBuZXR3b3JrSGFzaHJhdGU7CiAgICAgICAgZGlmZmljdWx0eSA9ICgodGhpcy5kaWZmaWN1bHR5ICogMi43NSkgLyA3MzApICsgZGlmZmljdWx0eTsKICAgICAgICBibG9ja3NwZXJkYXkgPSAoc2hhcmVyYXRlIC8gZGlmZmljdWx0eSkgKiA4NjQwMDsKICAgICAgICBjb2luc3BlcmRheSA9IGJsb2Nrc3BlcmRheSAqIHRoaXMuc3VwcGx5RW1pc3Npb25QZXJCbG9jazsKICAgICAgICByZXZlbnVlcGVyZGF5ID0gY29pbnNwZXJkYXkgKiB0aGlzLnByaWNlOwogICAgICAgIHByb2ZpdCA9IHJldmVudWVwZXJkYXkgLSBjb3N0OwogICAgICB9CiAgICB9LAoKICAgIGFkZEZvcmVjYXN0OiBmdW5jdGlvbihmb3JlY2FzdCkgewogICAgICB0aGlzLmZvcmVjYXN0cy5wdXNoKGZvcmVjYXN0KTsKICAgIH0sCgogICAgbWluaW5nQ2FsY3VsYXRvcjogZnVuY3Rpb24oKSB7CiAgICAgIHRoaXMucmVzZXRGb3JlY2FzdHMoKTsKICAgICAgY29uc3QgSyA9IHRoaXMuY3JlYXRlVmFyaWFibGVzKCk7CiAgICAgIHRoaXMuY3JlYXRlRm9yZWNhc3QoS1swXSwgS1sxXSwgS1syXSwgS1szXSwgS1s0XSwgS1s1XSwgS1s2XSwgS1s3XSwgS1s4XSwgS1s5XSk7CiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue"],"names":[],"mappings":"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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAC3C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAElE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACxD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;MAEjC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEnE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;6BACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;6BACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;;MAEpD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;;MAEnB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAErB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;UACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtxttE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;MAC/B;IACF,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,CAAC;EACH,CAAC;AACH","file":"/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      {{ miningCalculator() }} \n\n      <div class=\"row\">\n        \n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Hashrate (TH/s)</h4> \n            <input data-test=\"hashrate\" type=\"number\" v-model.number=\"terahashRate\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Power Use</h4> \n            <input data-test=\"power\" type=\"number\" v-model.number=\"powerUse\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Electricity Costs (kWh)</h4> \n            <input type=\"number\" v-model.number=\"electricityCosts\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Bitcoin Price</h4>\n            <input type=\"number\" v-model.number=\"price\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Difficulty</h4> \n            <input type=\"number\" v-model.number=\"difficulty\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Network Hashrate</h4> \n            <input type=\"number\" v-model.number=\"networkHashrate\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Emission Per Block</h4> \n            <input type=\"number\" v-model.number=\"supplyEmissionPerBlock\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Periods</h4> \n            <input data-test=\"periods\" type=\"number\" v-model.number=\"period\">\n          </label>\n        </div>\n\n      </div>\n    </div>\n\n    <div id=\"forecasts\">\n      <table class=\"table\">\n\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Hashrate</th>\n            <th scope=\"col\">Network Hashrate</th>\n            <th scope=\"col\">Share Rate</th>\n            <th scope=\"col\">Difficulty</th>\n            <th scope=\"col\">Blocks per Day</th>\n            <th scope=\"col\">BTC per Day</th>\n            <th scope=\"col\">Revenue per Day</th>\n            <th scope=\"col\">Electricity Costs</th>\n            <th scope=\"col\">Profit</th>\n            <th scope=\"col\">Total Profit</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr v-bind:key=\"item\" v-for=\"item in forecasts\">\n            <th scope=\"row\">{{ item.day }}</th>\n            <td data-test=\"forecast-hashrate\">{{ item.hashrate }}</td>\n            <td>{{ item.networkHashrate }}</td>\n            <td>{{ item.sharerate }}</td>\n            <td>{{ item.difficulty }}</td>\n            <td>{{ item.blocksperday }}</td>\n            <td>{{ item.coinsperday }}</td>\n            <td>{{ item.revenueperday }}</td>\n            <td data-test=\"forecast-electricity\">{{ item.electricityCosts }}</td>\n            <td>{{ item.profit }}</td>\n            <td>{{ item.totalProfit }}</td>\n          </tr>\n\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n\n  props: {\n    minerSelected: {\n      type: Array,\n      default: null,\n    }\n  },\n\n  data() {\n    return {\n      terahashRate: 100,\n      powerUse: 3200,\n      electricityCosts: 0.07,\n      price: 60000,\n      difficulty: 23581981443663,\n      networkHashrate: 1.82821e+20,\n      supplyEmissionPerBlock: 6.25,\n      period: 30,\n      forecasts: [],\n    }\n  },\n\n  watch: {\n    minerSelected: function() {\n      this.terahashRate = this.minerSelected[0];\n      this.powerUse = this.minerSelected[1];\n    }\n  },\n\n  methods: {\n    resetForecasts: function() {\n      this.forecasts = [];\n    },\n\n    createVariables: function() {\n      const hashrate = this.terahashRate * 1000000000000;\n      const sharerate = hashrate / Math.pow(2, 32)\n      const cost = ((this.powerUse * 24) / 1000) * this.electricityCosts;\n\n      let difficulty = this.difficulty;\n      let networkHashrate = this.networkHashrate;\n      let blocksperday = (sharerate / this.difficulty) * 86400;\n      let coinsperday = blocksperday * this.supplyEmissionPerBlock;\n      let revenueperday = coinsperday * this.price;\n      let profit = revenueperday - cost;\n\n      const variables = [hashrate, networkHashrate, sharerate, difficulty,\n                  blocksperday, coinsperday, revenueperday, cost, profit];\n\n      return variables;\n    },\n\n    createForecast: function(hashrate, networkHashrate, sharerate, \n                             difficulty, blocksperday, coinsperday, \n                             revenueperday, cost, profit) {\n\n      let totalProfit = 0;\n\n      for (let i = 1; i <= this.period; i++) {\n        totalProfit += profit;\n\n        let forecast = {\n          \"day\": i,\n          \"hashrate\": hashrate,\n          \"networkHashrate\": networkHashrate,\n          \"sharerate\": Number(Math.round(sharerate + \"e2\") + \"e-2\").toFixed(2),\n          \"difficulty\": Number(Math.round(difficulty + \"e0\") + \"e-0\").toFixed(0),\n          \"blocksperday\": Number(Math.round(blocksperday + \"e8\") + \"e-8\").toFixed(8),\n          \"coinsperday\": Number(Math.round(coinsperday + \"e8\") + \"e-8\").toFixed(8),\n          \"revenueperday\": Number(Math.round(revenueperday + \"e2\") + \"e-2\").toFixed(2),\n          \"electricityCosts\": Number(Math.round(cost + \"e2\") + \"e-2\").toFixed(2),\n          \"profit\": Number(Math.round(profit + \"e2\") + \"e-2\").toFixed(2),\n          \"totalProfit\": Number(Math.round(totalProfit + \"e2\") + \"e-2\").toFixed(2),\n        };\n\n        this.addForecast(forecast);\n\n        networkHashrate = ((this.networkHashrate * 2) / 730) + networkHashrate;\n        difficulty = ((this.difficulty * 2.75) / 730) + difficulty;\n        blocksperday = (sharerate / difficulty) * 86400;\n        coinsperday = blocksperday * this.supplyEmissionPerBlock;\n        revenueperday = coinsperday * this.price;\n        profit = revenueperday - cost;\n      }\n    },\n\n    addForecast: function(forecast) {\n      this.forecasts.push(forecast);\n    },\n\n    miningCalculator: function() {\n      this.resetForecasts();\n      const K = this.createVariables();\n      this.createForecast(K[0], K[1], K[2], K[3], K[4], K[5], K[6], K[7], K[8], K[9]);\n    },\n  },\n}\n</script>\n\n<style scoped>\n.block {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: center;\n  margin: 5px;\n  margin-top: 30px;\n  padding: 15px;\n  padding-bottom: 30px;\n  background-color: gainsboro;\n}\n\n.block-title {\n  margin: 10px;\n}\n\n#forecasts {\n  margin-top: 80px;\n}\n</style>"]}]}