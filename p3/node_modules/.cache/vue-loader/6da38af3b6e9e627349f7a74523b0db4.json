{"remainingRequest":"/opt/lampp/htdocs/e28/p3/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue?vue&type=template&id=354486c0&scoped=true","dependencies":[{"path":"/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue","mtime":1620779877670},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/e28/p3/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgIHt7IG1pbmluZ0NhbGN1bGF0b3IoKSB9fSAKCiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTMiPgogICAgICAgICAgPGxhYmVsIGNsYXNzPSJibG9jayI+CiAgICAgICAgICAgIDxoNCBjbGFzcz0iYmxvY2stdGl0bGUiPkhhc2hyYXRlIChUSC9zKTwvaDQ+IAogICAgICAgICAgICA8aW5wdXQgZGF0YS10ZXN0PSJoYXNocmF0ZSIgdHlwZT0ibnVtYmVyIiB2LW1vZGVsLm51bWJlcj0idGVyYWhhc2hSYXRlIj4KICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0zIj4KICAgICAgICAgIDxsYWJlbCBjbGFzcz0iYmxvY2siPgogICAgICAgICAgICA8aDQgY2xhc3M9ImJsb2NrLXRpdGxlIj5Qb3dlciBVc2U8L2g0PiAKICAgICAgICAgICAgPGlucHV0IGRhdGEtdGVzdD0icG93ZXIiIHR5cGU9Im51bWJlciIgdi1tb2RlbC5udW1iZXI9InBvd2VyVXNlIj4KICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0zIj4KICAgICAgICAgIDxsYWJlbCBjbGFzcz0iYmxvY2siPgogICAgICAgICAgICA8aDQgY2xhc3M9ImJsb2NrLXRpdGxlIj5FbGVjdHJpY2l0eSBDb3N0cyAoa1doKTwvaDQ+IAogICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiB2LW1vZGVsLm51bWJlcj0iZWxlY3RyaWNpdHlDb3N0cyI+CiAgICAgICAgICA8L2xhYmVsPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctMyI+CiAgICAgICAgICA8bGFiZWwgY2xhc3M9ImJsb2NrIj4KICAgICAgICAgICAgPGg0IGNsYXNzPSJibG9jay10aXRsZSI+Qml0Y29pbiBQcmljZTwvaDQ+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIHYtbW9kZWwubnVtYmVyPSJwcmljZSI+CiAgICAgICAgICA8L2xhYmVsPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctMyI+CiAgICAgICAgICA8bGFiZWwgY2xhc3M9ImJsb2NrIj4KICAgICAgICAgICAgPGg0IGNsYXNzPSJibG9jay10aXRsZSI+RGlmZmljdWx0eTwvaDQ+IAogICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiB2LW1vZGVsLm51bWJlcj0iZGlmZmljdWx0eSI+CiAgICAgICAgICA8L2xhYmVsPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctMyI+CiAgICAgICAgICA8bGFiZWwgY2xhc3M9ImJsb2NrIj4KICAgICAgICAgICAgPGg0IGNsYXNzPSJibG9jay10aXRsZSI+TmV0d29yayBIYXNocmF0ZTwvaDQ+IAogICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiB2LW1vZGVsLm51bWJlcj0ibmV0d29ya0hhc2hyYXRlIj4KICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0zIj4KICAgICAgICAgIDxsYWJlbCBjbGFzcz0iYmxvY2siPgogICAgICAgICAgICA8aDQgY2xhc3M9ImJsb2NrLXRpdGxlIj5FbWlzc2lvbiBQZXIgQmxvY2s8L2g0PiAKICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgdi1tb2RlbC5udW1iZXI9InN1cHBseUVtaXNzaW9uUGVyQmxvY2siPgogICAgICAgICAgPC9sYWJlbD4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTMiPgogICAgICAgICAgPGxhYmVsIGNsYXNzPSJibG9jayI+CiAgICAgICAgICAgIDxoNCBjbGFzcz0iYmxvY2stdGl0bGUiPlBlcmlvZHM8L2g0PiAKICAgICAgICAgICAgPGlucHV0IGRhdGEtdGVzdD0icGVyaW9kcyIgdHlwZT0ibnVtYmVyIiB2LW1vZGVsLm51bWJlcj0icGVyaW9kIj4KICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgPC9kaXY+CgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgaWQ9ImZvcmVjYXN0cyI+CiAgICAgIDx0YWJsZSBjbGFzcz0idGFibGUiPgoKICAgICAgICA8dGhlYWQ+CiAgICAgICAgICA8dHI+CiAgICAgICAgICAgIDx0aCBzY29wZT0iY29sIj4jPC90aD4KICAgICAgICAgICAgPHRoIHNjb3BlPSJjb2wiPkhhc2hyYXRlPC90aD4KICAgICAgICAgICAgPHRoIHNjb3BlPSJjb2wiPk5ldHdvcmsgSGFzaHJhdGU8L3RoPgogICAgICAgICAgICA8dGggc2NvcGU9ImNvbCI+U2hhcmUgUmF0ZTwvdGg+CiAgICAgICAgICAgIDx0aCBzY29wZT0iY29sIj5EaWZmaWN1bHR5PC90aD4KICAgICAgICAgICAgPHRoIHNjb3BlPSJjb2wiPkJsb2NrcyBwZXIgRGF5PC90aD4KICAgICAgICAgICAgPHRoIHNjb3BlPSJjb2wiPkJUQyBwZXIgRGF5PC90aD4KICAgICAgICAgICAgPHRoIHNjb3BlPSJjb2wiPlJldmVudWUgcGVyIERheTwvdGg+CiAgICAgICAgICAgIDx0aCBzY29wZT0iY29sIj5FbGVjdHJpY2l0eSBDb3N0czwvdGg+CiAgICAgICAgICAgIDx0aCBzY29wZT0iY29sIj5Qcm9maXQ8L3RoPgogICAgICAgICAgICA8dGggc2NvcGU9ImNvbCI+VG90YWwgUHJvZml0PC90aD4KICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90aGVhZD4KCiAgICAgICAgPHRib2R5PgogICAgICAgICAgPHRyIHYtYmluZDprZXk9Iml0ZW0iIHYtZm9yPSJpdGVtIGluIGZvcmVjYXN0cyI+CiAgICAgICAgICAgIDx0aCBzY29wZT0icm93Ij57eyBpdGVtLmRheSB9fTwvdGg+CiAgICAgICAgICAgIDx0ZCBkYXRhLXRlc3Q9ImZvcmVjYXN0LWhhc2hyYXRlIj57eyBpdGVtLmhhc2hyYXRlIH19PC90ZD4KICAgICAgICAgICAgPHRkPnt7IGl0ZW0ubmV0d29ya0hhc2hyYXRlIH19PC90ZD4KICAgICAgICAgICAgPHRkPnt7IGl0ZW0uc2hhcmVyYXRlIH19PC90ZD4KICAgICAgICAgICAgPHRkPnt7IGl0ZW0uZGlmZmljdWx0eSB9fTwvdGQ+CiAgICAgICAgICAgIDx0ZD57eyBpdGVtLmJsb2Nrc3BlcmRheSB9fTwvdGQ+CiAgICAgICAgICAgIDx0ZD57eyBpdGVtLmNvaW5zcGVyZGF5IH19PC90ZD4KICAgICAgICAgICAgPHRkPnt7IGl0ZW0ucmV2ZW51ZXBlcmRheSB9fTwvdGQ+CiAgICAgICAgICAgIDx0ZCBkYXRhLXRlc3Q9ImZvcmVjYXN0LWVsZWN0cmljaXR5Ij57eyBpdGVtLmVsZWN0cmljaXR5Q29zdHMgfX08L3RkPgogICAgICAgICAgICA8dGQ+e3sgaXRlbS5wcm9maXQgfX08L3RkPgogICAgICAgICAgICA8dGQ+e3sgaXRlbS50b3RhbFByb2ZpdCB9fTwvdGQ+CiAgICAgICAgICA8L3RyPgoKICAgICAgICA8L3Rib2R5PgogICAgICA8L3RhYmxlPgogICAgPC9kaXY+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;MAEvB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEd,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACJ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAChC,CAAC,CAAC,CAAC,CAAC;;QAEN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/opt/lampp/htdocs/e28/p3/src/components/BitcoinCalculator.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      {{ miningCalculator() }} \n\n      <div class=\"row\">\n        \n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Hashrate (TH/s)</h4> \n            <input data-test=\"hashrate\" type=\"number\" v-model.number=\"terahashRate\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Power Use</h4> \n            <input data-test=\"power\" type=\"number\" v-model.number=\"powerUse\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Electricity Costs (kWh)</h4> \n            <input type=\"number\" v-model.number=\"electricityCosts\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Bitcoin Price</h4>\n            <input type=\"number\" v-model.number=\"price\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Difficulty</h4> \n            <input type=\"number\" v-model.number=\"difficulty\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Network Hashrate</h4> \n            <input type=\"number\" v-model.number=\"networkHashrate\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Emission Per Block</h4> \n            <input type=\"number\" v-model.number=\"supplyEmissionPerBlock\">\n          </label>\n        </div>\n\n        <div class=\"col-lg-3\">\n          <label class=\"block\">\n            <h4 class=\"block-title\">Periods</h4> \n            <input data-test=\"periods\" type=\"number\" v-model.number=\"period\">\n          </label>\n        </div>\n\n      </div>\n    </div>\n\n    <div id=\"forecasts\">\n      <table class=\"table\">\n\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Hashrate</th>\n            <th scope=\"col\">Network Hashrate</th>\n            <th scope=\"col\">Share Rate</th>\n            <th scope=\"col\">Difficulty</th>\n            <th scope=\"col\">Blocks per Day</th>\n            <th scope=\"col\">BTC per Day</th>\n            <th scope=\"col\">Revenue per Day</th>\n            <th scope=\"col\">Electricity Costs</th>\n            <th scope=\"col\">Profit</th>\n            <th scope=\"col\">Total Profit</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr v-bind:key=\"item\" v-for=\"item in forecasts\">\n            <th scope=\"row\">{{ item.day }}</th>\n            <td data-test=\"forecast-hashrate\">{{ item.hashrate }}</td>\n            <td>{{ item.networkHashrate }}</td>\n            <td>{{ item.sharerate }}</td>\n            <td>{{ item.difficulty }}</td>\n            <td>{{ item.blocksperday }}</td>\n            <td>{{ item.coinsperday }}</td>\n            <td>{{ item.revenueperday }}</td>\n            <td data-test=\"forecast-electricity\">{{ item.electricityCosts }}</td>\n            <td>{{ item.profit }}</td>\n            <td>{{ item.totalProfit }}</td>\n          </tr>\n\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n\n  props: {\n    minerSelected: {\n      type: Array,\n      default: null,\n    }\n  },\n\n  data() {\n    return {\n      terahashRate: 100,\n      powerUse: 3200,\n      electricityCosts: 0.07,\n      price: 60000,\n      difficulty: 23581981443663,\n      networkHashrate: 1.82821e+20,\n      supplyEmissionPerBlock: 6.25,\n      period: 30,\n      forecasts: [],\n    }\n  },\n\n  watch: {\n    minerSelected: function() {\n      this.terahashRate = this.minerSelected[0];\n      this.powerUse = this.minerSelected[1];\n    }\n  },\n\n  methods: {\n    resetForecasts: function() {\n      this.forecasts = [];\n    },\n\n    createVariables: function() {\n      const hashrate = this.terahashRate * 1000000000000;\n      const sharerate = hashrate / Math.pow(2, 32)\n      const cost = ((this.powerUse * 24) / 1000) * this.electricityCosts;\n\n      let difficulty = this.difficulty;\n      let networkHashrate = this.networkHashrate;\n      let blocksperday = (sharerate / this.difficulty) * 86400;\n      let coinsperday = blocksperday * this.supplyEmissionPerBlock;\n      let revenueperday = coinsperday * this.price;\n      let profit = revenueperday - cost;\n\n      const variables = [hashrate, networkHashrate, sharerate, difficulty,\n                  blocksperday, coinsperday, revenueperday, cost, profit];\n\n      return variables;\n    },\n\n    createForecast: function(hashrate, networkHashrate, sharerate, \n                             difficulty, blocksperday, coinsperday, \n                             revenueperday, cost, profit) {\n\n      let totalProfit = 0;\n\n      for (let i = 1; i <= this.period; i++) {\n        totalProfit += profit;\n\n        let forecast = {\n          \"day\": i,\n          \"hashrate\": hashrate,\n          \"networkHashrate\": networkHashrate,\n          \"sharerate\": Number(Math.round(sharerate + \"e2\") + \"e-2\").toFixed(2),\n          \"difficulty\": Number(Math.round(difficulty + \"e0\") + \"e-0\").toFixed(0),\n          \"blocksperday\": Number(Math.round(blocksperday + \"e8\") + \"e-8\").toFixed(8),\n          \"coinsperday\": Number(Math.round(coinsperday + \"e8\") + \"e-8\").toFixed(8),\n          \"revenueperday\": Number(Math.round(revenueperday + \"e2\") + \"e-2\").toFixed(2),\n          \"electricityCosts\": Number(Math.round(cost + \"e2\") + \"e-2\").toFixed(2),\n          \"profit\": Number(Math.round(profit + \"e2\") + \"e-2\").toFixed(2),\n          \"totalProfit\": Number(Math.round(totalProfit + \"e2\") + \"e-2\").toFixed(2),\n        };\n\n        this.addForecast(forecast);\n\n        networkHashrate = ((this.networkHashrate * 2) / 730) + networkHashrate;\n        difficulty = ((this.difficulty * 2.75) / 730) + difficulty;\n        blocksperday = (sharerate / difficulty) * 86400;\n        coinsperday = blocksperday * this.supplyEmissionPerBlock;\n        revenueperday = coinsperday * this.price;\n        profit = revenueperday - cost;\n      }\n    },\n\n    addForecast: function(forecast) {\n      this.forecasts.push(forecast);\n    },\n\n    miningCalculator: function() {\n      this.resetForecasts();\n      const K = this.createVariables();\n      this.createForecast(K[0], K[1], K[2], K[3], K[4], K[5], K[6], K[7], K[8], K[9]);\n    },\n  },\n}\n</script>\n\n<style scoped>\n.block {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: center;\n  margin: 5px;\n  margin-top: 30px;\n  padding: 15px;\n  padding-bottom: 30px;\n  background-color: gainsboro;\n}\n\n.block-title {\n  margin: 10px;\n}\n\n#forecasts {\n  margin-top: 80px;\n}\n</style>"]}]}